#
# Sway config file
#

# Inspiration:
# - https://github.com/lokesh-krishna/dotfiles/tree/main
# - specifically nord-v3 https://github.com/lokesh-krishna/dotfiles/tree/main/nord-v3

exec "ssh-agent -a $SSH_AUTH_SOCK"

set $mod Mod4

input "type:keyboard" {
  xkb_options caps:escape_shifted_capslock
}

input "type:touchpad" {
    tap enabled

		# Allow switching between workspaces with left and right swipes
		# bindgesture swipe:right workspace prev
		# bindgesture swipe:left workspace next
}

# Wallpaper
output '*' bg ~/.config/wallpapers/evangelion-unit-01-outline.png center #1e1e2e


exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP=sway XDG_SESSION_DESKTOP=sway

bindgesture swipe:4:right workspace prev
bindgesture swipe:4:left workspace next
focus_follows_mouse always
mouse_warping container

# Font for window titles. Will also be used by the bar unless a different font
font pango:JetbrainsMonoNerdFont 10

exec_always pkill kanshi; exec kanshi

# Disabled in favor of rotate shortcuts, and waybar buttons
# bindswitch tablet:on exec 'sway output - transform 270'
bindswitch tablet:off exec 'sway output - transform 0'


# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec alacritty

bindsym $mod+Shift+n exec swaync-client -t -sw

# kill focused window
bindsym $mod+Shift+q kill

# dmenu/program launcher
bindsym $mod+d exec rofi -show combi
bindsym $mod+shift+d exec "rofi -show combi -combi-modi 'window,drun,ssh' -modi combi"

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# Rotate screen
bindsym $mod+Shift+Alt+right exec "sway output - transform 90 clockwise"
bindsym $mod+Shift+Alt+left exec "sway output - transform 90 anticlockwise"

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+Shift+a focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

#
# Scratchpad:
#

# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show


# reload the configuration file
bindsym $mod+Shift+c reload

# restart sway inplace (preserves your layout/session, can be used to upgrade sway)
bindsym $mod+Shift+r restart

# Exit sway (logs you out of your Wayland session)
# bindsym $mod+Shift+e exec swaynag -t custom -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
set $exit "exit: [s]leep, [p]oweroff, [r]eboot, [l]ogout [x]lock"
mode $exit {
    bindsym --to-code {
        s exec swaylock -f && systemctl suspend, mode "default"
        p exec systemctl poweroff
        r exec systemctl reboot
        l exec swaymsg exit
        x exec swaylock -f

        Return mode "default"
        Escape mode "default"
        $mod+Shift+e mode "default"
    }
}

bindsym --to-code $mod+Shift+e mode $exit

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 5 px or 5 ppt
        bindsym k resize grow height 5 px or 5 ppt
        bindsym j resize shrink height 5 px or 5 ppt
        bindsym l resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 5 px or 5 ppt
        bindsym Down resize grow height 5 px or 5 ppt
        bindsym Up resize shrink height 5 px or 5 ppt
        bindsym Right resize grow width 5 px or 5 ppt
        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# ================== THEME =========================
# https://github.com/catppuccin/i3
include themes/catppuccin-mocha

# target                 title     bg    text   indicator  border
client.focused           $lavender $base $text  $rosewater $lavender
client.focused_inactive  $overlay0 $base $text  $rosewater $overlay0
client.unfocused         $overlay0 $base $text  $rosewater $overlay0
client.urgent            $peach    $base $peach $overlay0  $peach
client.placeholder       $overlay0 $base $text  $overlay0  $overlay0
client.background        $base

# Gaps settings
gaps inner 3
gaps outer 3
smart_gaps on
smart_borders on
default_floating_border pixel 3
titlebar_border_thickness 2
default_border pixel 2
# for_window [class="^.*"] border pixel 3

##########
# Status Bar
##########
bar {
    swaybar_command waybar
}

# lock
bindsym $mod+shift+x exec swaylock

### Idle configuration

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
# exec swayidle -w \
#        timeout 300 'swaylock -f' \
#        before-sleep 'swaylock -f'

exec swayidle -w \
    timeout 10 'swaymsg "output * "I\'m getting kinda tired. I think I\ll go home now" && systemctl suspend' \
    after-resume 'swaymsg "output * power on"' \
    before-sleep 'swaylock -f'

# exec swayidle -w\
#     timeout 300 'systemctl suspend' \
#     after-resume 'swaymsg "output * power on"' \
#     before-sleep $locker\
#     lock $locker

# Use pactl to adjust volume in PulseAudio.
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym $mod+delete exec playerctl play-pause
bindsym $mod+end exec playerctl previous
bindsym $mod+insert exec playerctl next

# Media player controls
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Screen brightness shortcuts
# https://github.com/Hummer12007/brightnessctl
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +10%
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 10%-
bindsym shift+XF86MonBrightnessUp exec --no-startup-id brightnessctl set +1%
bindsym shift+XF86MonBrightnessDown exec --no-startup-id brightnessctl set 1%-

# Startup Tasks
exec --no-startup-id syncthing -no-browser
exec picom &
# Set keymap with xmodmap
# exec --no-startup-id xmodmap ~/.Xmodmap

# custom configs
# Is this a goog config?
# exec_always --no-startup-id xrdb -merge /home/greg/.Xresources

#####################
#### System shortcuts
#####################

# Screenshots
#interactive screenshot by pressing printscreen
# bindsym Print exec grim - | wl-copy
bindsym Print exec slurp | grim -g - $(xdg-user-dir PICTURES)/$(date +'screenshot_%Y-%m-%d-%H%M%S.png')
bindsym $mod+shift+g exec slurp | grim -g - $(xdg-user-dir PICTURES)/$(date +'screenshot_%Y-%m-%d-%H%M%S.png')
#crop-area screenshot by pressing Mod + printscreen
# bindsym $mod+Print exec slurp | grim - | wl-copy
# bindsym $mod+shift+Print exec grim - | wl-copy
